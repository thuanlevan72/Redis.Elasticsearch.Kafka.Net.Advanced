input {
  kafka {
    bootstrap_servers => "kafka:29092"
    topics_pattern => "todoapp-log.public.*"
    group_id => "logstash-consumer-logger"
    codec => "json"
    decorate_events => true  # Bắt buộc để có @metadata.kafka.topic
  }
}

filter {
   # Chuyển đổi "__op" thành "operation"
  mutate {
    rename => { "__op" => "operation" }
  }

  # Dùng ruby filter để chuyển "__op" từ "c", "u", "d" thành "create", "update", "delete"
  ruby {
    code => "
      case event.get('operation')
      when 'c'
        event.set('operation', 'create')
      when 'u'
        event.set('operation', 'update')
      when 'd'
        event.set('operation', 'delete')
      end
    "
  }

  # Chuyển đổi timestamp từ millisecond sang định dạng ISO 8601
  date {
    match => [ "__source_ts_ms", "UNIX_MS" ]
    target => "timestamp"
    timezone => "Asia/Ho_Chi_Minh"
  }

  # Bỏ trường "__source_ts_ms" (không cần nữa sau khi chuyển thành timestamp)
  mutate {
    remove_field => [ "__source_ts_ms" ]
  }

  # Gắn đúng table name từ metadata
  if [@metadata][kafka][topic] {
    mutate {
      add_field => {
        "table_name" => "%{[@metadata][kafka][topic]}"
      }
    }
  }

  # # Nếu chưa có @timestamp, tạo tạm thời (nhưng thường Kafka sẽ có sẵn)
  # if !["@timestamp"] {
  #   ruby {
  #     code => 'event.set("@timestamp", Time.now.utc)'
  #   }
  # }
}

output {
  elasticsearch {
    hosts => ["http://todoapp-elasticsearch-1:9200"]
    index => "log-fulltable-%{+YYYY.MM.dd}"
    # timezone => "Asia/Ho_Chi_Minh"
  }

  stdout {
    codec => rubydebug
  }
}
